{"version":3,"sources":["theme/ThemeProvider.js","components/NavBar/NavBar.js","components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","hooks/useFavoritePicker.js","pages/Home/style.js","constant.js","pages/Home/Home.js","hooks/usePeopleFetch.js","pages/Favorites/style.js","pages/routes.js","pages/Favorites/Favorites.js","AppRouter.js","index.js"],"names":["ThemeProvider","children","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","routes","history","useHistory","useState","findIndex","path","location","pathname","value","setValue","AppBar","position","color","style","top","Tabs","onChange","_e","newValue","push","aria-label","indicatorColor","textColor","map","index","label","Tab","Text","styled","div","size","bold","Typography","Spinner","thickness","variant","CircularProgress","CheckBox","isChecked","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","setUserCountries","userCountries","countries","addOrRemoveFavorite","isUserFavorite","infiniteScroll","lastUserRef","hoveredUserId","setHoveredUserId","handleMouseLeave","onCountryValueChange","countryCode","includes","filter","countryCodeEl","country","nat","user","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","street","number","city","IconButton","onClick","length","ref","useFavoritePicker","JSON","parse","localStorage","getItem","favorites","setFavorites","useEffect","setItem","stringify","removeFromFavorites","userToRemove","compareUsers","addToFavorites","userToAdd","i","userA","userB","Home","Content","Header","PAGES","NATIONALITIES","page","setPage","RANDOMUSER_API","setUsers","storeUsers","setStoreUsers","setIsLoading","fetchUsers","a","fetchConfig","params","results","join","axios","get","newUsers","data","usePeopleFetch","observer","useRef","lastUserElRef","useCallback","userElRef","current","disconnect","IntersectionObserver","isIntersecting","pageNum","observe","component","pages","removedUser","setRemovedUser","openSnackbar","setOpenSnackbar","Object","values","Snackbar","open","autoHideDuration","onClose","message","AppRouter","exact","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.1f1cf3cb.chunk.js","sourcesContent":["import React from \"react\";\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst ThemeProvider = ({ children }) => {\n  const overrides = {\n    MuiTab: {\n      root: {\n        backgroundColor: \"#303030\",\n      },\n    },\n  };\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        overrides,\n        palette: {\n          type: \"dark\",\n          primary: {\n            main: \"#84ffff\",\n          },\n          error: {\n            main: \"#f06292\",\n          },\n        },\n      }),\n    []\n  );\n\n  return (\n    <Provider theme={theme}>\n      <CssBaseline />\n      {children}\n    </Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { useHistory } from \"react-router\";\n\nconst NavBar = ({ routes }) => {\n  let history = useHistory();\n  const [value, setValue] = useState(\n    routes.findIndex(({ path }) => {\n      return path == history.location.pathname;\n    })\n  );\n\n  const handleChange = (_e, newValue) => {\n    setValue(newValue);\n    history.push(routes[newValue].path);\n  };\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Navigation\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        {routes.map(({ label }, index) => {\n          return <Tab label={label} index={index} key={index} />;\n        })}\n      </Tabs>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import styled from \"styled-components\";\n\nexport const Text = styled.div`\n  font-size: ${({ size }) => size};\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\n`;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport * as S from \"./style\";\n\nconst Text = ({ size = \"14px\", children, bold }) => {\n  return (\n    <Typography>\n      <S.Text size={size} bold={bold}>\n        {children}\n      </S.Text>\n    </Typography>\n  );\n};\n\nexport default Text;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Spinner = ({ size, color, thickness, variant }) => {\n  return (\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\n  );\n};\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const CheckBox = styled.div``;\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport * as S from \"./style\";\n\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\n  const handleChange = () => {\n    onChange && onChange(value);\n  };\n  return (\n    <S.CheckBox>\n      <FormControlLabel\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\n        label={label}\n      />\n    </S.CheckBox>\n  );\n};\n\nexport default CheckBox;\n","import styled from \"styled-components\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 500px;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  & > * {\n    margin-inline-end: 8px;\n  }\n`;\n","import React, { useState } from \"react\";\nimport Text from \"components/Text\";\nimport Spinner from \"components/Spinner\";\nimport CheckBox from \"components/CheckBox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport * as S from \"./style\";\n\nconst UserList = ({\n  users,\n  isLoading,\n  setUserCountries,\n  userCountries,\n  countries,\n  addOrRemoveFavorite,\n  isUserFavorite,\n  infiniteScroll,\n  lastUserRef,\n}) => {\n  const [hoveredUserId, setHoveredUserId] = useState();\n\n  const handleMouseEnter = (index) => {\n    setHoveredUserId(index);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredUserId();\n  };\n\n  // Country checkboxes' onChange event handler.\n  const onCountryValueChange = (countryCode) => {\n    // Based on if the value is present in the userCountries array,\n    // add or remove changed checkbox's value.\n    if (!userCountries.includes(countryCode))\n      setUserCountries([...userCountries, countryCode]);\n    else\n      setUserCountries(\n        userCountries.filter((countryCodeEl) => countryCodeEl != countryCode)\n      );\n  };\n\n  return (\n    <S.UserList>\n      <S.Filters>\n        {countries?.map(({ country, nat }) => {\n          return (\n            <CheckBox\n              value={nat}\n              label={country}\n              onChange={onCountryValueChange}\n              key={nat}\n            />\n          );\n        })}\n      </S.Filters>\n      <S.List>\n        {users.map((user, index) => {\n          return (\n            <S.User\n              key={index}\n              onMouseEnter={() => handleMouseEnter(index)}\n              onMouseLeave={handleMouseLeave}\n            >\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\n              <S.UserInfo>\n                <Text size=\"22px\" bold>\n                  {user?.name.title} {user?.name.first} {user?.name.last}\n                </Text>\n                <Text size=\"14px\">{user?.email}</Text>\n                <Text size=\"14px\">\n                  {user?.location.street.number} {user?.location.street.name}\n                </Text>\n                <Text size=\"14px\">\n                  {user?.location.city} {user?.location.country}\n                </Text>\n              </S.UserInfo>\n              <S.IconButtonWrapper\n                isVisible={index === hoveredUserId || isUserFavorite(user)}\n              >\n                <IconButton\n                  onClick={() => {\n                    addOrRemoveFavorite(user);\n                  }}\n                >\n                  <FavoriteIcon color=\"error\" />\n                </IconButton>\n              </S.IconButtonWrapper>\n              {infiniteScroll && users.length === index + 1 && <div ref={lastUserRef} />}\n            </S.User>\n          );\n        })}\n        {isLoading && (\n          <S.SpinnerWrapper>\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\n          </S.SpinnerWrapper>\n        )}\n      </S.List>\n    </S.UserList>\n  );\n};\n\nexport default UserList;\n","import { useEffect, useState } from \"react\";\n\nexport const useFavoritePicker = () => {\n  const [favorites, setFavorites] = useState(\n    () => JSON.parse(localStorage.getItem(\"favorites\")) ?? []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  }, [favorites]);\n\n  const addOrRemoveFavorite = (user) => {\n    if (isUserFavorite(user)) removeFromFavorites(user);\n    else addToFavorites(user);\n  };\n\n  const removeFromFavorites = (userToRemove) => {\n    setFavorites(favorites.filter((user) => !compareUsers(user, userToRemove)));\n  };\n\n  const addToFavorites = (userToAdd) => {\n    setFavorites([...favorites, userToAdd]);\n  };\n\n  const isUserFavorite = (user) => {\n    for (let i = 0; i < favorites.length; i++) {\n      if (compareUsers(favorites[i], user)) return true;\n    }\n    return false;\n  };\n\n  const compareUsers = (userA, userB) => {\n    return JSON.stringify(userA) === JSON.stringify(userB);\n  };\n\n  return { addOrRemoveFavorite, isUserFavorite, favorites };\n};\n","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","export const SIZE = {\n  small: \"small\",\n  medium: \"medium\",\n  large: \"large\",\n};\n\nexport const VARIANT = {\n  text: \"text\",\n  filled: \"filled\",\n  outlined: \"outlined\",\n  standard: \"standard\",\n  contained: \"contained\",\n};\n\nexport const COLORS = {\n  default: \"default\",\n  inherit: \"inherit\",\n  primary: \"primary\",\n  secondary: \"secondary\",\n};\n\nexport const PAGES = {\n  home: \"HOME\",\n  favorites: \"FAVORITES\",\n};\n\nexport const NATIONALITIES = [\n  {\n    country: \"Brazil\",\n    nat: \"BR\",\n  },\n  {\n    country: \"Australia\",\n    nat: \"AU\",\n  },\n  {\n    country: \"Canada\",\n    nat: \"CA\",\n  },\n  {\n    country: \"Germany\",\n    nat: \"DE\",\n  },\n  {\n    country: \"New Zealand\",\n    nat: \"NZ\",\n  },\n];\n","import React, { useState, useRef, useCallback } from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport { useFavoritePicker, usePeopleFetch } from \"hooks\";\nimport * as S from \"./style\";\nimport { NATIONALITIES as countries } from \"constant\";\n\nconst Home = () => {\n  // Added user checked countries to component's state and passed it to the usePeopleHook.\n  const [userCountries, setUserCountries] = useState([]);\n  const [page, setPage] = useState(1);\n  const { users, isLoading } = usePeopleFetch(userCountries, page);\n  const { addOrRemoveFavorite, isUserFavorite } = useFavoritePicker();\n\n  const observer = useRef();\n  const lastUserElRef = useCallback(\n    (userElRef) => {\n      if (isLoading) return;\n      if (observer.current) observer.current.disconnect();\n\n      observer.current = new IntersectionObserver(([lastUserEl]) => {\n        if (lastUserEl.isIntersecting) setPage((pageNum) => pageNum + 1);\n      });\n\n      if (userElRef) observer.current.observe(userElRef);\n    },\n    [isLoading]\n  );\n\n  return (\n    <S.Home>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            PplFinder\n          </Text>\n        </S.Header>\n        <UserList\n          users={users}\n          isLoading={isLoading}\n          setUserCountries={setUserCountries}\n          userCountries={userCountries}\n          countries={countries}\n          addOrRemoveFavorite={addOrRemoveFavorite}\n          isUserFavorite={isUserFavorite}\n          infiniteScroll={true}\n          lastUserRef={lastUserElRef}\n        />\n      </S.Content>\n    </S.Home>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const usePeopleFetch = (userCountries, page) => {\n  const RANDOMUSER_API = `https://randomuser.me/api/`;\n\n  const [users, setUsers] = useState([]);\n  const [storeUsers, setStoreUsers] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Added userCountries to useEffect deps to rerender with only desired users.\n  useEffect(() => {\n    setStoreUsers(false);\n    setIsLoading(true);\n    setUsers([]);\n    fetchUsers(userCountries, page);\n  }, [userCountries]);\n\n  useEffect(() => {\n    setStoreUsers(true);\n    fetchUsers(userCountries, page);\n  }, [page]);\n\n  async function fetchUsers(userCountries, page = 1) {\n    setIsLoading(true);\n\n    const fetchConfig = {\n      params: { results: 25, page: page, nat: userCountries.join() },\n    };\n    const newUsers = (await axios.get(RANDOMUSER_API, fetchConfig)).data.results;\n\n    setIsLoading(false);\n    setUsers((users) => {\n      if (storeUsers) return [...users, ...newUsers];\n      return newUsers;\n    });\n  }\n\n  return { users, isLoading, fetchUsers };\n};\n","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import * as pages from \"./index\";\nimport { PAGES } from \"constant\";\n\nconst routes = [\n  {\n    path: \"/\",\n    component: pages.Home,\n    label: PAGES.home,\n  },\n  {\n    path: \"/favorites\",\n    component: pages.Favorites,\n    label: PAGES.favorites,\n  },\n];\n\nexport default routes;\n","import Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport * as S from \"./style\";\nimport { useFavoritePicker } from \"hooks\";\nimport { useEffect, useState } from \"react\";\nimport { Snackbar } from \"@material-ui/core\";\n\nconst Favorites = () => {\n  const { addOrRemoveFavorite, isUserFavorite, favorites } = useFavoritePicker();\n  const [removedUser, setRemovedUser] = useState();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const notifyFavoriteChange = (user) => {\n    setRemovedUser(Object.values(user.name).join(\" \"));\n    setOpenSnackbar(true);\n    addOrRemoveFavorite(user);\n  };\n\n  return (\n    <S.Home>\n      <S.Content>\n        <S.Header>\n          <Text size=\"64px\" bold>\n            My Fav Ppl\n          </Text>\n        </S.Header>\n        <UserList\n          users={favorites}\n          isLoading={false}\n          addOrRemoveFavorite={notifyFavoriteChange}\n          isUserFavorite={isUserFavorite}\n        />\n        <Snackbar\n          open={openSnackbar}\n          autoHideDuration={3000}\n          onClose={() => {\n            setOpenSnackbar(false);\n          }}\n          message={`Removed ${removedUser}`}\n        />\n      </S.Content>\n    </S.Home>\n  );\n};\n\nexport default Favorites;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"theme\";\nimport NavBar from \"components/NavBar\";\nimport routes from \"pages/routes\";\n\nconst AppRouter = () => {\n  return (\n    <ThemeProvider>\n      <Router>\n        <NavBar routes={routes} />\n        <Switch>\n          {routes.map(({ path, component }, index) => {\n            return <Route exact path={path} component={component} key={index} />;\n          })}\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"AppRouter\";\n\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}